services:
    ucs_event_flow_analyser.examplemenu_builder:
        class: Atos\Worldline\Fm\Integration\Ucs\EventFlowAnalyserBundle\Menu\MenuBuilder
        arguments: ["@knp_menu.factory", "@logger", '@security.context', '@kernel', '@cache']
        tags:
            - { name: monolog.logger, channel: app }

    ucs_event_flow_analyser.examplemenu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: ucs_event_flow_analyser.examplemenu_builder
        factory_method: createMainMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: examplemain } # The alias is what is used to retrieve the menu

    ucs_event_flow_analyser.examplenavbarsubnavmenu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: ucs_event_flow_analyser.examplemenu_builder
        factory_method: createNavbarsSubnavMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: examplemainsubnav } # The alias is what is used to retrieve the menu

    ucs_event_flow_analyser.examplecomponentssubnavmenu:
        class: Knp\Menu\MenuItem # the service definition requires setting the class
        factory_service: ucs_event_flow_analyser.examplemenu_builder
        factory_method: createComponentsSubnavMenu
        arguments: ["@request"]
        scope: request # needed as we have the request as a dependency here
        tags:
            - { name: knp_menu.menu, alias: examplemainsubnav } # The alias is what is used to retrieve the menu

    ucs_event_flow_analyser.examplemenuvoter:
        class: Atos\Worldline\Fm\Integration\Ucs\EventFlowAnalyserBundle\Menu\Voter\RequestVoter
        arguments:
            - @service_container
        tags:
            - { name: knp_menu.voter }
